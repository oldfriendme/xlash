name: Build and Release

on:
  release:
    types: [published]

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: [amd64, arm64]

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v4
        with:
          go-version: '1.23.12'
      - run: |
          mkdir -p build
          EXT=""
          CGO_ENABLED=0
          if [ "${{ matrix.goos }}" = "windows" ]; then EXT=".exe"; fi
          echo "üèóÔ∏è Building ${{ matrix.goos }}/${{ matrix.goarch }}..."
          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} \
          go build -ldflags="-s -w" \
                   -o "xlash-${{ matrix.goos }}-${{ matrix.goarch }}$EXT" .

          if [ "${{ matrix.goos }}" = "windows" ]; then
            zip "build/xlash-${{ matrix.goos }}-${{ matrix.goarch }}.zip" "xlash-${{ matrix.goos }}-${{ matrix.goarch }}$EXT"
          else
            tar -czf "build/xlash-${{ matrix.goos }}-${{ matrix.goarch }}.tar.gz" "xlash-${{ matrix.goos }}-${{ matrix.goarch }}$EXT"
          fi
      - uses: actions/upload-artifact@v4
        with:
          name: binaries-${{ matrix.goos }}-${{ matrix.goarch }}
          path: build/*

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: build
      - uses: softprops/action-gh-release@v1
        with:
          files: build/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
