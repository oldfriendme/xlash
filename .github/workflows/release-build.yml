name: Build and Release

on:
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: [amd64, arm64]

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v4
        with:
          go-version: '1.23.12'

      - run: |
          mkdir -p build
          EXT=""
          if [ "${{ matrix.goos }}" = "windows" ]; then EXT=".exe"; fi
          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} \
          go build -o build/xlash-${{ matrix.goos }}-${{ matrix.goarch }}$EXT .
          cd build
          for f in *; do
            if [[ "$f" == *.exe ]]; then
              zip "${f%.exe}.zip" "$f"
            else
              tar -czf "$f.tar.gz" "$f"
            fi
          done

      - uses: actions/upload-artifact@v4
        with:
          name: binaries-${{ matrix.goos }}-${{ matrix.goarch }}
          path: build/*

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: build
      - uses: softprops/action-gh-release@v1
        with:
          files: build/**
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
